name: Test with compiler sanitizers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - maintenance/**

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  clang_ASAN:
    if: github.repository == 'numpy/numpy'
    runs-on: ubuntu-22.04-arm
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
        fetch-depth: 0
        fetch-tags: true
        persist-credentials: false

    - uses: ./.github/actions/setup-sanitizer
      with:
        sanitizer: asan

    - name: Cache Python source
      id: cache-python-source
      uses: actions/cache@v4
      with:
        path: Python-3.13.0a4.tgz
        key: python-3.13.0a4-source

    - name: Download Python source
      if: steps.cache-python-source.outputs.cache-hit != 'true'
      run: wget https://www.python.org/ftp/python/3.13.0/Python-3.13.0a4.tgz

    - name: Build Python with ASAN
      run: |
        tar xzf Python-3.13.0a4.tgz
        cd Python-3.13.0a4
        CFLAGS="-fsanitize=address" LDFLAGS="-fsanitize=address" \
        ./configure --prefix=$HOME/python-build --with-address-sanitizer
        make -j2
        make install
        cd ..
        echo "$HOME/python-build/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip wheel
        python3 -m pip install --no-cache-dir -r requirements/build_requirements.txt
        python3 -m pip install --no-cache-dir -r requirements/ci_requirements.txt
        python3 -m pip install --no-cache-dir -r requirements/test_requirements.txt

    - name: Build
      run: 
        python3 -m spin build -j2 -- -Db_sanitize=address

    - name: Test
      run: |
        # pass -s to pytest to see ASAN errors and warnings, otherwise pytest captures them
        ASAN_OPTIONS=detect_leaks=0:symbolize=1:strict_init_order=true:allocator_may_return_null=1:halt_on_error=1 \
        python3 -m spin test -- -v -s --timeout=600 --durations=10
        ccache -s

  clang_TSAN:
    if: github.repository == 'numpy/numpy'
    runs-on: ubuntu-22.04-arm
    steps:
    - uses: actions/checkout@@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
        fetch-depth: 0
        fetch-tags: true
        persist-credentials: false

    - uses: ./.github/actions/setup-sanitizer
      with:
        sanitizer: tsan

    - name: Cache Python source
      id: cache-python-source
      uses: actions/cache@v4
      with:
        path: Python-3.13.0a4.tgz
        key: python-3.13.0a4-source

    - name: Download Python source
      if: steps.cache-python-source.outputs.cache-hit != 'true'
      run: wget https://www.python.org/ftp/python/3.13.0/Python-3.13.0a4.tgz

    - name: Build Python with TSAN
      run: |
        tar xzf Python-3.13.0a4.tgz
        cd Python-3.13.0a4
        CFLAGS="-fsanitize=thread" LDFLAGS="-fsanitize=thread" \
        ./configure --prefix=$HOME/python-build --with-thread-sanitizer
        make -j2
        make install
        cd ..
        echo "$HOME/python-build/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        # TODO: remove when a released cython supports free-threaded python
        python3 -m pip install --upgrade pip wheel
        python3 -m pip install --no-cache-dir -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple cython
        python3 -m pip install --no-cache-dir -r requirements/build_requirements.txt
        python3 -m pip install --no-cache-dir -r requirements/ci_requirements.txt
        python3 -m pip install --no-cache-dir -r requirements/test_requirements.txt


    - name: Build
      run: 
        python3 -m spin build -j2 -- -Db_sanitize=thread

    - name: Test
      run: |
        # These tests are slow, so only run tests in files that do "import threading" to make them count
        THREADING_FILES=$(find numpy -name "test*.py" | xargs grep -l "import threading" | tr "\n" " ")
        TSAN_OPTIONS=allocator_may_return_null=1:halt_on_error=1 \
        python3 -m spin test $THREADING_FILES -- -v -s --timeout=600 --durations=10
        ccache -s
